{"ast":null,"code":"var _jsxFileName = \"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/TestList.js\",\n  _s = $RefreshSig$();\n// TestList.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from './local-data/UserGet';\nimport TestListView from './views/TestListView';\nimport TestsForPatient from './data/TestsForPatient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestList() {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n\n  //fetching test list for patient\n  useEffect(() => {\n    const test_list = TestsForPatient();\n    console.log('test_list : ');\n    console.log(test_list);\n    // setTestList();\n    fetchTestList();\n  }, []);\n  const fetchTestList = async () => {\n    try {\n      const response = await fetch(`${testListUrl}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0];\n        setTestList(jsonData[key]);\n      } else {\n        console.error('Error fetching test list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching test list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TestListView, {\n    test_list: testList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TestList, \"lgMEP1mzOvRU8BAPL7MzcGtEuYA=\");\n_c = TestList;\nexport default TestList;\nvar _c;\n$RefreshReg$(_c, \"TestList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UrlContext","loadUserData","TestListView","TestsForPatient","jsxDEV","_jsxDEV","TestList","_s","testList","setTestList","user","url","testListUrl","test_list","console","log","fetchTestList","response","fetch","id","ok","jsonData","json","key","Object","keys","error","status","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/TestList.js"],"sourcesContent":["// TestList.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from './local-data/UserGet';\nimport TestListView from './views/TestListView';\nimport TestsForPatient from './data/TestsForPatient';\n\nfunction TestList() {\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n\n  //fetching test list for patient\n  useEffect(() => {\n    const test_list = TestsForPatient();\n    console.log('test_list : ');\n    console.log(test_list);\n    // setTestList();\n    fetchTestList();\n  }, []);\n\n  const fetchTestList = async () => {\n    try {\n      const response = await fetch(`${testListUrl}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0]\n        setTestList(jsonData[key]);\n      } else {\n        console.error('Error fetching test list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching test list:', error);\n    }\n  };\n\n  return (\n    <TestListView test_list={testList}/>\n  );\n}\n\nexport default TestList;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAO,kCAAkC;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,eAAe,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,IAAI,GAAGT,YAAY,CAAC,CAAC;EAC3B,MAAMU,GAAG,GAAGZ,UAAU,CAACC,UAAU,CAAC;EAClC,MAAMY,WAAW,GAAGD,GAAG,GAAG,wCAAwC;;EAElE;EACAb,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGV,eAAe,CAAC,CAAC;IACnCW,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB;IACAG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,WAAY,GAAEF,IAAI,CAACS,EAAG,EAAC,CAAC;MACxD,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtC,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpCZ,WAAW,CAACY,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC5B,CAAC,MAAM;QACLT,OAAO,CAACY,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,MAAM,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACErB,OAAA,CAACH,YAAY;IAACW,SAAS,EAAEL;EAAS;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAExC;AAACxB,EAAA,CAjCQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}