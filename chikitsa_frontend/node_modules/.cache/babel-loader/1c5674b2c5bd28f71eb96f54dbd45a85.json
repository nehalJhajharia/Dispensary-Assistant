{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport UrlContext from '../context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from '../local-data/UserGet';\nconst TestsForPatient = async () => {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n  try {\n    const response = await fetch(`${testListUrl}${user.id}`);\n    if (response.ok) {\n      const jsonData = await response.json();\n      const key = Object.keys(jsonData)[0];\n      setTestList(jsonData[key]);\n    } else {\n      console.error('Error fetching test list:', response.status);\n    }\n  } catch (error) {\n    console.error('Error fetching test list:', error);\n  }\n  return testList;\n};\n_s(TestsForPatient, \"HrpyOVyD3CHM235mHieTCbJQ6sw=\");\n_c = TestsForPatient;\nexport default TestsForPatient;\nvar _c;\n$RefreshReg$(_c, \"TestsForPatient\");","map":{"version":3,"names":["useState","useEffect","useContext","UrlContext","loadUserData","TestsForPatient","_s","testList","setTestList","user","url","testListUrl","response","fetch","id","ok","jsonData","json","key","Object","keys","console","error","status","_c","$RefreshReg$"],"sources":["/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/data/TestsForPatient.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport UrlContext from '../context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from '../local-data/UserGet';\n\n\nconst TestsForPatient = async () => {\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n\n  try {\n    const response = await fetch(`${testListUrl}${user.id}`);\n    if (response.ok) {\n      const jsonData = await response.json();\n      const key = Object.keys(jsonData)[0]\n      setTestList(jsonData[key]);\n    } else {\n      console.error('Error fetching test list:', response.status);\n    }\n  } catch (error) {\n    console.error('Error fetching test list:', error);\n  }\n\n  return testList;\n}\n\nexport default TestsForPatient;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAO,kCAAkC;AACzC,OAAOC,YAAY,MAAM,uBAAuB;AAGhD,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,IAAI,GAAGL,YAAY,CAAC,CAAC;EAC3B,MAAMM,GAAG,GAAGR,UAAU,CAACC,UAAU,CAAC;EAClC,MAAMQ,WAAW,GAAGD,GAAG,GAAG,wCAAwC;EAElE,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,WAAY,GAAEF,IAAI,CAACK,EAAG,EAAC,CAAC;IACxD,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtC,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpCR,WAAW,CAACQ,QAAQ,CAACE,GAAG,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLG,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,QAAQ,CAACW,MAAM,CAAC;IAC7D;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;EAEA,OAAOf,QAAQ;AACjB,CAAC;AAAAD,EAAA,CApBKD,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAsBrB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}