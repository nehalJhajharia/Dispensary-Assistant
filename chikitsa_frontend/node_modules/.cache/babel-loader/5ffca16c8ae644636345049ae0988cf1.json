{"ast":null,"code":"var _jsxFileName = \"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AllMedicines.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllMedicines = () => {\n  _s();\n  const [medicineList, setMedicineList] = useState([]);\n  const url = useContext(UrlContext);\n  const user_uri = url + 'api/master/get/all-medicines/';\n  useEffect(() => {\n    fetchMedicineList();\n  }, []);\n  const fetchMedicineList = async () => {\n    try {\n      const response = await fetch(`${user_uri}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const data = jsonData[0];\n        const key = Object.keys(data)[0];\n        setMedicineList(data[key]);\n      } else {\n        console.error('Error fetching medicine list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching medicine list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\",\n    style: {\n      alignContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Medicines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Mfg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Exp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: medicineList.map(medicine => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.date_of_mfg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.date_of_expiry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: medicine.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, medicine.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AllMedicines, \"b86EZttlrVZOcw38tNC5YykpepY=\");\n_c = AllMedicines;\nexport default AllMedicines;\nvar _c;\n$RefreshReg$(_c, \"AllMedicines\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UrlContext","jsxDEV","_jsxDEV","AllMedicines","_s","medicineList","setMedicineList","url","user_uri","fetchMedicineList","response","fetch","ok","jsonData","json","data","key","Object","keys","console","error","status","className","style","alignContent","children","fileName","_jsxFileName","lineNumber","columnNumber","map","medicine","name","type","count","date_of_mfg","date_of_expiry","company","id","_c","$RefreshReg$"],"sources":["/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AllMedicines.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\n\nconst AllMedicines = () => {\n  const [medicineList, setMedicineList] = useState([]);\n  const url = useContext(UrlContext)\n  const user_uri = url + 'api/master/get/all-medicines/';\n\n  useEffect(() => {\n    fetchMedicineList();\n  }, []);\n\n  const fetchMedicineList = async () => {\n    try {\n      const response = await fetch(`${user_uri}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const data = jsonData[0];\n        const key = Object.keys(data)[0]\n        setMedicineList(data[key]);\n      } else {\n        console.error('Error fetching medicine list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching medicine list:', error);\n    }\n  };\n\n  return (\n    <div className='mt-3' style={{alignContent:'center'}}>\n      <h2>All Medicines</h2>\n      <table className='table table-sm'>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Count</th>\n            <th>Date of Mfg</th>\n            <th>Date of Exp</th>\n            <th>Company</th>\n          </tr>\n        </thead>\n        <tbody>\n          {medicineList.map((medicine) => (\n            <tr key={medicine.id}>\n              <td>{medicine.name}</td>\n              <td>{medicine.type}</td>\n              <td>{medicine.count}</td>\n              <td>{medicine.date_of_mfg}</td>\n              <td>{medicine.date_of_expiry}</td>\n              <td>{medicine.company}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AllMedicines;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}