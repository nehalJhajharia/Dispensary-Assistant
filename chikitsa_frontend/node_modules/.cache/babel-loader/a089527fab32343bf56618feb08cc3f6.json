{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport UrlContext from '../context/UrlContext';\nimport loadUserData from '../local-data/UserGet';\nconst useTestsForPatient = () => {\n  _s();\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n  useEffect(() => {\n    const fetchTestList = async () => {\n      try {\n        const response = await fetch(`${testListUrl}${user.id}`);\n        if (response.ok) {\n          const jsonData = await response.json();\n          const key = Object.keys(jsonData)[0];\n          setTestList(jsonData[key]);\n        } else {\n          console.error('Error fetching test list:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching test list:', error);\n      }\n    };\n    fetchTestList();\n  }, [testListUrl, user.id]);\n  return testList;\n};\n_s(useTestsForPatient, \"lgMEP1mzOvRU8BAPL7MzcGtEuYA=\");\nexport default useTestsForPatient;","map":{"version":3,"names":["useState","useEffect","useContext","UrlContext","loadUserData","useTestsForPatient","_s","testList","setTestList","user","url","testListUrl","fetchTestList","response","fetch","id","ok","jsonData","json","key","Object","keys","console","error","status"],"sources":["/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/data/TestsForPatient.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport UrlContext from '../context/UrlContext';\nimport loadUserData from '../local-data/UserGet';\n\nconst useTestsForPatient = () => {\n  const [testList, setTestList] = useState([]);\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n\n  useEffect(() => {\n    const fetchTestList = async () => {\n      try {\n        const response = await fetch(`${testListUrl}${user.id}`);\n        if (response.ok) {\n          const jsonData = await response.json();\n          const key = Object.keys(jsonData)[0];\n          setTestList(jsonData[key]);\n        } else {\n          console.error('Error fetching test list:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching test list:', error);\n      }\n    };\n\n    fetchTestList();\n  }, [testListUrl, user.id]);\n\n  return testList;\n};\n\nexport default useTestsForPatient;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,IAAI,GAAGL,YAAY,CAAC,CAAC;EAC3B,MAAMM,GAAG,GAAGR,UAAU,CAACC,UAAU,CAAC;EAClC,MAAMQ,WAAW,GAAGD,GAAG,GAAG,wCAAwC;EAElET,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,WAAY,GAAEF,IAAI,CAACM,EAAG,EAAC,CAAC;QACxD,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UACtC,MAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;UACpCT,WAAW,CAACS,QAAQ,CAACE,GAAG,CAAC,CAAC;QAC5B,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,QAAQ,CAACW,MAAM,CAAC;QAC7D;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,WAAW,EAAEF,IAAI,CAACM,EAAE,CAAC,CAAC;EAE1B,OAAOR,QAAQ;AACjB,CAAC;AAACD,EAAA,CA1BID,kBAAkB;AA4BxB,eAAeA,kBAAkB"},"metadata":{},"sourceType":"module"}