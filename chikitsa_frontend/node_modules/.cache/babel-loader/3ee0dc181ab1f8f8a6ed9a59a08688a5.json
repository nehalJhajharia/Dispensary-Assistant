{"ast":null,"code":"var _jsxFileName = \"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './appointments.css';\nimport Appointment from './Appointment';\nimport UrlContext from './context/UrlContext';\nimport loadUserData from './store/UserGet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faPlusSquare, faThLarge } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointments = () => {\n  _s();\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  const url = useContext(UrlContext);\n  const user = loadUserData();\n  const patientAppointmentsURL = url + 'api/patient/get/appointments/?patient_id=';\n  const doctorAppointmentsURL = url + 'api/doctor/get/appointments/?doctor_id=';\n  const add_new_icon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faPlus - faThLarge\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 24\n  }, this);\n  useEffect(() => {\n    fetchAppointmentsList();\n  }, []);\n  const fetchAppointmentsList = async () => {\n    try {\n      const response = await fetch(user.patient_or_doc === true ? `${patientAppointmentsURL}${user.id}` : `${doctorAppointmentsURL}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0];\n        setAppointmentsList(jsonData[key]);\n      } else {\n        console.error('Error fetching appointments list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching appointments list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), user.patient_or_doc === true && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/create-appointment`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-100 px-3 mx-auto btn btn-success\",\n          style: {\n            position: 'relative',\n            alignItems: 'center'\n          },\n          children: add_new_icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Doctor \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appointmentsList.map(appointment => /*#__PURE__*/_jsxDEV(Appointment, {\n          appointment: appointment,\n          userType: user.patient_or_doc\n        }, appointment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Appointments, \"7cupMz90+QSo3B0s8RcI8YqPLkY=\");\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","Appointment","UrlContext","loadUserData","FontAwesomeIcon","faPlusCircle","faPlusSquare","faThLarge","jsxDEV","_jsxDEV","Appointments","_s","appointmentsList","setAppointmentsList","url","user","patientAppointmentsURL","doctorAppointmentsURL","add_new_icon","icon","faPlus","fileName","_jsxFileName","lineNumber","columnNumber","fetchAppointmentsList","response","fetch","patient_or_doc","id","ok","jsonData","json","key","Object","keys","console","error","status","children","className","style","display","justifyContent","to","position","alignItems","map","appointment","userType","_c","$RefreshReg$"],"sources":["/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointments.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './appointments.css';\nimport Appointment from './Appointment';\nimport UrlContext from './context/UrlContext';\nimport loadUserData from './store/UserGet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faPlusSquare, faThLarge } from '@fortawesome/free-solid-svg-icons';\n\nconst Appointments = () => {\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  const url = useContext(UrlContext);\n  const user = loadUserData();\n  const patientAppointmentsURL = url + 'api/patient/get/appointments/?patient_id=';\n  const doctorAppointmentsURL = url + 'api/doctor/get/appointments/?doctor_id=';\n  const add_new_icon = <FontAwesomeIcon icon={faPlus-faThLarge} />;\n\n  useEffect(() => {\n    fetchAppointmentsList();\n  }, []);\n\n  const fetchAppointmentsList = async () => {\n    try {\n      const response = await fetch(\n        user.patient_or_doc === true ? `${patientAppointmentsURL}${user.id}` : `${doctorAppointmentsURL}${user.id}`\n      );\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0];\n        setAppointmentsList(jsonData[key]);\n      } else {\n        console.error('Error fetching appointments list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching appointments list:', error);\n    }\n  };\n\n\n  return (\n    <div>\n      <div className='mt-3' style={{display:'flex', justifyContent:'space-between'}}>\n        <h2>Appointments</h2>\n        {user.patient_or_doc === true && (\n        <Link to={`/create-appointment`} >\n          <button className='w-100 px-3 mx-auto btn btn-success' style={{position:'relative', alignItems:'center'}}>{add_new_icon}</button>\n        </Link>      \n      )}\n      </div>\n      \n      <table className='table table-sm'>\n        <thead>\n          <tr>\n            <th>Patient </th>\n            <th>Doctor </th>\n            <th>Date </th>\n            <th>Time </th>\n            <th>Status</th>\n            <th>More</th>\n          </tr>\n        </thead>\n        <tbody>\n          {appointmentsList.map((appointment) => (\n            <Appointment key={appointment.id} appointment={appointment} userType={user.patient_or_doc}/>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Appointments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}