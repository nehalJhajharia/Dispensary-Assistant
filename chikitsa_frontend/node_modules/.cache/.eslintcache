[{"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/index.js":"1","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/App.js":"2","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/reportWebVitals.js":"3","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Login.js":"4","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AppointmentDetails.js":"5","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/CreateAppointment.js":"6","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Home.js":"7","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/ProfilePage.js":"8","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/CreateTest.js":"9","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/EditMedicalHistory.js":"10","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Signup.js":"11","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/context/UrlContext.js":"12","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/context/UserContext.js":"13","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/MedicalHistory.js":"14","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Profile.js":"15","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AllMedicines.js":"16","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/VaccinationHistory.js":"17","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/DoctorProfile.js":"18","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Navbar.js":"19","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/StudentProfile.js":"20","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointments.js":"21","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/StaffProfile.js":"22","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/TestList.js":"23","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Address.js":"24","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Age.js":"25","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointment.js":"26","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/CurrentPageSet.js":"27","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/UserSet.js":"28","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/UserGet.js":"29","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/CurrentPageGet.js":"30","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/Get.js":"31","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/Save.js":"32","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/SeparateDateTime.js":"33","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/ClearLocalData.js":"34"},{"size":535,"mtime":1686866398810,"results":"35","hashOfConfig":"36"},{"size":1379,"mtime":1688888784984,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1686866398813,"results":"38","hashOfConfig":"36"},{"size":3027,"mtime":1688985036119,"results":"39","hashOfConfig":"36"},{"size":8969,"mtime":1688983410745,"results":"40","hashOfConfig":"36"},{"size":14380,"mtime":1689059855151,"results":"41","hashOfConfig":"36"},{"size":173,"mtime":1688971597502,"results":"42","hashOfConfig":"36"},{"size":4719,"mtime":1689049626151,"results":"43","hashOfConfig":"36"},{"size":2363,"mtime":1688888784985,"results":"44","hashOfConfig":"36"},{"size":5605,"mtime":1688973966272,"results":"45","hashOfConfig":"36"},{"size":18929,"mtime":1689046284717,"results":"46","hashOfConfig":"36"},{"size":372,"mtime":1688890591060,"results":"47","hashOfConfig":"36"},{"size":334,"mtime":1688888784989,"results":"48","hashOfConfig":"36"},{"size":2811,"mtime":1688953249647,"results":"49","hashOfConfig":"36"},{"size":2701,"mtime":1688888784987,"results":"50","hashOfConfig":"36"},{"size":1700,"mtime":1688942794177,"results":"51","hashOfConfig":"36"},{"size":4560,"mtime":1688953394876,"results":"52","hashOfConfig":"36"},{"size":909,"mtime":1688941945823,"results":"53","hashOfConfig":"36"},{"size":2043,"mtime":1689056640382,"results":"54","hashOfConfig":"36"},{"size":2350,"mtime":1688888784987,"results":"55","hashOfConfig":"36"},{"size":3533,"mtime":1689056271044,"results":"56","hashOfConfig":"36"},{"size":1533,"mtime":1688888784987,"results":"57","hashOfConfig":"36"},{"size":6324,"mtime":1688981903570,"results":"58","hashOfConfig":"36"},{"size":353,"mtime":1688888784983,"results":"59","hashOfConfig":"36"},{"size":403,"mtime":1688888784983,"results":"60","hashOfConfig":"36"},{"size":4844,"mtime":1689058262617,"results":"61","hashOfConfig":"36"},{"size":143,"mtime":1688929924752,"results":"62","hashOfConfig":"36"},{"size":153,"mtime":1688931866347,"results":"63","hashOfConfig":"36"},{"size":174,"mtime":1688929544084,"results":"64","hashOfConfig":"36"},{"size":164,"mtime":1688929897876,"results":"65","hashOfConfig":"36"},{"size":159,"mtime":1688929536394,"results":"66","hashOfConfig":"36"},{"size":143,"mtime":1688929492684,"results":"67","hashOfConfig":"36"},{"size":426,"mtime":1688945908625,"results":"68","hashOfConfig":"36"},{"size":145,"mtime":1688972719207,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"gy5qij",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/index.js",[],["153","154"],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/App.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/reportWebVitals.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Login.js",["155"],"import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { UserContext } from './context/UserContext';\nimport './login.css';\nimport saveUserData from './local-data/UserSet';\nimport setPage from './local-data/CurrentPageSet';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  // Set the value of username\n  const { setUserId: setContextUserId } = useContext(UserContext);\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setContextUserId(username);\n    const user = {\n      name: 'jha',\n      id: username,\n    };\n    saveUserData(user);\n    setPage('profile');\n\n    // Clear the input fields after submission\n    setUsername('');\n    setPassword('');\n\n    // Redirect to the profile page\n    navigate('/profile');\n  };\n\n  const handleSignup = () => {\n    navigate('/signup');\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"login-form\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'column' }}>\n        <img\n          src=\"https://www.svnit.ac.in/conference/frsm2023/hit/svnit_logo.png\"\n          alt=\"logo\"\n          height=\"100vh\"\n          className=\"navbar-img\"\n        />\n        <div className=\"mb-3\"></div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-floating\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={username}\n              onChange={handleUsernameChange}\n              placeholder=\" \"\n              required\n            />\n            <label htmlFor=\"username\" className=\"form-label text-center\" style={{ width: '100%' }}>\n              Username\n            </label>\n          </div>\n          <div className=\"form-floating\">\n            <input\n              className=\"form-control\"\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              placeholder=\" \"\n              required\n            />\n            <label htmlFor=\"password\" className=\"form-label text-center\" style={{ width: '100%' }}>\n              Password\n            </label>\n          </div>\n          <button type=\"submit\" className=\"mt-3 btn btn-success\" style={{width:'100%'}}>\n              Login\n          </button>\n          <hr style={{ width: '80%', marginInline: 'auto' }} />\n          <button type=\"button\" className=\"btn btn-success\" style={{width:'100%'}} onClick={handleSignup}>\n            Signup\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AppointmentDetails.js",["156","157","158","159","160"],"import React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\nimport { updateAppointmentStatus } from './Appointment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faXmark, faCheck } from '@fortawesome/free-solid-svg-icons';\n\nconst AppointmentDetails = ({appointment_id}) => {\n  const [appointmentDetails, setAppointmentDetails] = useState(null);\n  const url = useContext(UrlContext);\n  const appointmentDetailsURL = url + `api/appointment/get/details/?appointment_id=${appointment_id}`;\n  const check = <FontAwesomeIcon icon={faCheck} />;\n\n  useEffect(() => {\n    fetchAppointmentDetails();\n  }, []);\n\n  const fetchAppointmentDetails = async () => {\n    try {\n      const response = await fetch(`${appointmentDetailsURL}`);\n      if (response.ok) {\n        const appointmentData = await response.json();\n        setAppointmentDetails(appointmentData);\n      } else {\n        console.error('Error fetching appointment details:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching appointment details:', error);\n    }\n  };\n\n  if (!appointmentDetails) {\n    return <div>Loading appointment details...</div>;\n  }\n\n  const formatTime = (dateTimeString) => {\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleTimeString([], { hour: 'numeric', minute: 'numeric' });\n  };\n\n  const formatDate = (dateTimeString) => {\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleDateString();\n  };\n\n  const getStatusString = (status) => {\n    if(status === -1){\n      return 'Rejected';\n    }else if(status === 0){\n      return 'Pending';\n    }else if(status === 1){\n      return 'Confirmed';\n    }else if(status === 2){\n      return 'Completed';\n    }else{\n      return 'Unknown';\n    }\n  };\n\n  const renderMedicines = (medicines) => {\n    if (Array.isArray(medicines) && medicines.length > 0) {\n      return (\n        <table className='table table-sm'>\n          <thead>\n            <tr>\n              <th>Medicine</th>\n              <th>After Food</th>\n              <th>Morning</th>\n              <th>Noon</th>\n              <th>Evening</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {medicines.map((medicine) => (\n              <tr key={medicine.id}>\n                <td>{medicine.name}</td>\n                <td>{medicine.after_food ? 'Yes' : 'No'}</td>\n                <td>{medicine.morning ? 'Yes' : 'No'}</td>\n                <td>{medicine.noon ? 'Yes' : 'No'}</td>\n                <td>{medicine.evening ? 'Yes' : 'No'}</td>\n                <td>{medicine.start_date}</td>\n                <td>{medicine.end_date}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n    return <p>No medicines prescribed.</p>;\n  };\n\n  const renderTests = (tests) => {\n    if (Array.isArray(tests) && tests.length > 0) {\n      return (\n        <table className='table table-sm'>\n          <thead>\n            <tr>\n              <th>Test</th>\n              <th>Date</th>\n              <th>Remarks</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tests.map((test) => (\n              <tr key={test.id}>\n                <td>{test.name}</td>\n                <td>{test.date}</td>\n                <td>{test.remarks || 'No remarks'}</td>\n                <td>{test.details}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n\n    return <p>No tests conducted.</p>;\n  };\n\n  const renderSymptoms = (symptoms) => {\n    if (typeof symptoms === 'object' && symptoms !== null) {\n      const symptomEntries = Object.entries(symptoms);\n\n      if (symptomEntries.length > 0) {\n        return (\n          <table className='table table-sm'>\n            <thead>\n              <tr>\n                <th>Symptom</th>\n                <th>Value</th>\n              </tr>\n            </thead>  \n            <tbody>\n              <tr>\n                <td>Fever</td>\n                <td>{symptoms.fever}</td>\n              </tr>\n              <tr>\n                <td>Recorded Temperature</td>\n                <td>{symptoms.recorded === 0 ? 'No' : symptoms.recorded}</td>\n              </tr>\n              <tr>\n                <td>Continuous Fever</td>\n                <td>{symptoms.continuous_fever ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Intermittent Fever</td>\n                <td>{symptoms.intermittent_fever ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Shivering</td>\n                <td>{symptoms.shivering ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Vomiting</td>\n                <td>{symptoms.vomiting ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Nausea</td>\n                <td>{symptoms.nausea ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Headache</td>\n                <td>{symptoms.headache ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Body Pain</td>\n                <td>{symptoms.body_pain ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Joint Pain</td>\n                <td>{symptoms.joint_pain ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Weakness</td>\n                <td>{symptoms.weakness ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Cold</td>\n                <td>{symptoms.cold ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Runny Nose</td>\n                <td>{symptoms.runny_nose ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Sneezing</td>\n                <td>{symptoms.sneezing ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Throat Pain</td>\n                <td>{symptoms.throat_pain ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Ear Ache</td>\n                <td>{symptoms.ear_ache ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Ear Discharge</td>\n                <td>{symptoms.ear_discharge ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Cough</td>\n                <td>{symptoms.cough ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Dry Cough</td>\n                <td>{symptoms.dry_cough ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Wet Cough</td>\n                <td>{symptoms.wet_cough ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Breathlessness</td>\n                <td>{symptoms.breathlessness ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Appetite</td>\n                <td>{symptoms.appetite ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Abdomen Pain</td>\n                <td>{symptoms.abdomen_pain ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Loose Motions</td>\n                <td>{symptoms.loose_motions ? 'Yes' : 'No'}</td>\n              </tr>\n              <tr>\n                <td>Urine Color</td>\n                <td>{symptoms.urine_color}</td>\n              </tr>\n              <tr>\n                <td>Other</td>\n                <td>{symptoms.other}</td>\n              </tr>\n            </tbody>\n          </table>\n        );\n      }\n    }\n\n    return <p>No symptoms recorded.</p>;\n  };\n\n  return (\n    <div className='w-100'>\n      <table className='table table-sm'>\n        <tbody>\n          <tr>\n            <td>Patient</td>\n            <td>{appointmentDetails.patient}</td>\n          </tr>\n          <tr>\n            <td>Doctor</td>\n            <td>{appointmentDetails.doctor}</td>\n          </tr>\n          <tr>\n            <td>Date</td>\n            <td>{formatDate(appointmentDetails.datetime)}</td>\n          </tr>\n          <tr>\n            <td>Time</td>\n            <td>{formatTime(appointmentDetails.datetime)} (24-hours)</td>\n          </tr>\n          <tr>\n            <td>Status</td>\n            <td>{getStatusString(appointmentDetails.status)}</td>\n          </tr>\n          <tr>\n            <td>Diagnosis Duration (Days)</td>\n            <td>{appointmentDetails.diagnosis_duration_days}</td>\n          </tr>\n          <tr>\n            <td>Remarks</td>\n            <td>{appointmentDetails.remarks}</td>\n          </tr>\n        </tbody>\n      </table>\n      <h4>Symptoms</h4>\n      <div>{renderSymptoms(appointmentDetails.symptoms)}</div>\n      <h4>Medicines</h4>\n      <div>{renderMedicines(appointmentDetails.medicines)}</div>\n      <h4>Tests</h4>\n      <div>{renderTests(appointmentDetails.tests)}</div>\n    </div>\n  );  \n};\n\nexport default AppointmentDetails;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/CreateAppointment.js",["161"],"import React, { useContext, useState, useEffect } from 'react';\nimport UrlContext from './context/UrlContext';\nimport loadUserData from './local-data/UserGet';\nimport { useNavigate } from 'react-router-dom';\n\nconst CreateAppointment = () => {\n  const navigate = useNavigate();\n  const [date, setDate] = useState('');\n  const [allDoctors, setDoctors] = useState([]);\n  const [doctorId, setDoctorId] = useState('');\n  const [time, setTime] = useState('');\n  const url = useContext(UrlContext);\n  const user_uri = url + 'api/patient/create/appointment/';\n  const all_docs_uri = url + 'api/doctor/get/all-doctors/';\n  const [fever, setFever] = useState(0);\n  const [recorded, setRecorded] = useState(0);\n  const [continuousFever, setContinuousFever] = useState(false);\n  const [intermittentFever, setIntermittentFever] = useState(false);\n  const [shivering, setShivering] = useState(false);\n  const [vomiting, setVomiting] = useState(false);\n  const [nausea, setNausea] = useState(false);\n  const [headache, setHeadache] = useState(false);\n  const [bodyPain, setBodyPain] = useState(false);\n  const [jointPain, setJointPain] = useState(false);\n  const [weakness, setWeakness] = useState(false);\n  const [cold, setCold] = useState(false);\n  const [runnyNose, setRunnyNose] = useState(false);\n  const [sneezing, setSneezing] = useState(false);\n  const [throatPain, setThroatPain] = useState(false);\n  const [earAche, setEarAche] = useState(false);\n  const [earDischarge, setEarDischarge] = useState(false);\n  const [cough, setCough] = useState(false);\n  const [dryCough, setDryCough] = useState(false);\n  const [wetCough, setWetCough] = useState(false);\n  const [breathlessness, setBreathlessness] = useState(false);\n  const [appetite, setAppetite] = useState(false);\n  const [abdomenPain, setAbdomenPain] = useState(false);\n  const [looseMotions, setLooseMotions] = useState(false);\n  const [urineColor, setUrineColor] = useState('');\n  const [other, setOther] = useState('');\n  const user = loadUserData();\n\n  // get all doctors\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n\n  useEffect(() => {\n    const handleBeforeUnload = (e) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await fetch(`${all_docs_uri}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        setDoctors(jsonData);\n      } else {\n        console.error('Error fetching doctors:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('patient_id', user.id);\n    formData.append('doctor_id', doctorId);\n    formData.append('datetime', `${date}T${time}:00Z`);\n    formData.append('fever', fever);\n    formData.append('recorded', recorded);\n    formData.append('continuous_fever', continuousFever);\n    formData.append('intermittent_fever', intermittentFever);\n    formData.append('shivering', shivering);\n    formData.append('vomiting', vomiting);\n    formData.append('nausea', nausea);\n    formData.append('headache', headache);\n    formData.append('body_pain', bodyPain);\n    formData.append('joint_pain', jointPain);\n    formData.append('weakness', weakness);\n    formData.append('cold', cold);\n    formData.append('runny_nose', runnyNose);\n    formData.append('sneezing', sneezing);\n    formData.append('throat_pain', throatPain);\n    formData.append('ear_ache', earAche);\n    formData.append('ear_discharge', earDischarge);\n    formData.append('cough', cough);\n    formData.append('dry_cough', dryCough);\n    formData.append('wet_cough', wetCough);\n    formData.append('breathlessness', breathlessness);\n    formData.append('appetite', appetite);\n    formData.append('abdomen_pain', abdomenPain);\n    formData.append('loose_motions', looseMotions);\n    formData.append('urine_color', urineColor);\n    formData.append('other', other);\n\n\n    console.log(formData);\n\n    // Send the data to the server\n    try {\n      const response = await fetch(`${user_uri}`, {\n        method: 'POST',\n        body: formData,\n      })\n      .then()\n      .catch(Error);\n\n      if (response.ok) {\n        console.log(response);\n      } else {\n        // handle error\n      }\n    } catch (error) {\n      console.error('Error creating appointment:', error);\n    }\n\n    navigate(`/profile`);\n  };\n\n  return (\n    <div style={{width:'100%',top:'0',left:'0', position:'absolute', overflow:'hidden'}}>\n      <form className='w-50 mx-auto' style={{position:'relative'}} onSubmit={handleSubmit}>\n      <h2 className=\"mt-3 text-center\">Create Appointment</h2>\n      <table className='table table-sm'>\n        <tbody>\n          <tr>\n            <td>Doctor</td>\n            <td>\n              <div className='w-50 form-floating-sm'>\n                <select\n                  className='form-control'\n                  id=\"docName\"\n                  value={doctorId}\n                  onChange={(e) => setDoctorId(e.target.value)}>\n                  <option value=\"\">Select a doctor</option>\n                  {allDoctors.map((doctor) => (\n                    <option key={doctor.id} value={doctor.id}>\n                      Dr. {doctor.first_name} {doctor.last_name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td>Date</td>\n            <td>\n            <input\n              type=\"date\"\n              id=\"date\"\n              className=\"form-control-sm\"\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              required\n            />\n            </td>\n          </tr>\n          <tr>\n            <td>Time</td>\n            <td><input className=\"form-control-sm\" type=\"time\" id=\"time\" value={time} onChange={(e) => setTime(e.target.value)} required /></td>\n          </tr>\n          <br />\n          <h5>Symptoms</h5>\n          <tr>\n            <td>Fever</td>\n            <td><select className=\"form-control-sm\" id=\"fever\" name=\"fever\" value={fever} onChange={(e) => setFever(e.target.value)}>\n              <option value=\"1\">Low</option>\n              <option value=\"2\">Medium</option>\n              <option value=\"3\">Strong</option>\n            </select></td>\n          </tr>\n          <tr>\n            <td>Recorded Fever</td>\n            <td><input className=\"form-control-sm\" type=\"number\" id=\"recorded\" name=\"recorded\" min=\"0\" max=\"200\"\n              value={recorded}\n              onChange={(e) => setRecorded(e.target.value)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Fever Type</td>\n            <td>\n              <tr>\n                <input className='form-check-input form-check-input-lg' type=\"radio\" id=\"continuousFever\" name=\"feverType\" value=\"continuous\"\n                checked={continuousFever}\n                onChange={() => setContinuousFever(!continuousFever)}\n              /><label htmlFor=\"continuousFever\">Continuous</label>\n              </tr>\n              <tr>\n                <input className='form-check-input form-check-input-lg' type=\"radio\" id=\"intermittentFever\" name=\"feverType\" value=\"intermittent\"\n                checked={intermittentFever}\n                onChange={() => setIntermittentFever(!intermittentFever)}\n              /><label htmlFor=\"intermittentFever\">Intermittent</label>\n              </tr>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Shivering</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"shivering\" name=\"shivering\"\n              checked={shivering}\n              onChange={() => setShivering(!shivering)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Vomiting</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"vomiting\" name=\"vomiting\"\n              checked={vomiting}\n              onChange={() => setVomiting(!vomiting)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Nausea</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"nausea\" name=\"nausea\"\n              checked={nausea}\n              onChange={() => setNausea(!nausea)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Headache</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"headache\" name=\"headache\"\n              checked={headache}\n              onChange={() => setHeadache(!headache)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Body Pain</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"bodyPain\" name=\"bodyPain\"\n              checked={bodyPain}\n              onChange={() => setBodyPain(!bodyPain)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Joint Pain</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"jointPain\" name=\"jointPain\"\n              checked={jointPain}\n              onChange={() => setJointPain(!jointPain)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Weakness</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"weakness\" name=\"weakness\"\n              checked={weakness}\n              onChange={() => setWeakness(!weakness)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Cold</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"cold\" name=\"cold\"\n              checked={cold}\n              onChange={() => setCold(!cold)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Runny Nose</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"runnyNose\" name=\"runnyNose\"\n              checked={runnyNose}\n              onChange={() => setRunnyNose(!runnyNose)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Sneezing</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"sneezing\" name=\"sneezing\"\n              checked={sneezing}\n              onChange={() => setSneezing(!sneezing)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Throat Pain</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"throatPain\" name=\"throatPain\"\n              checked={throatPain}\n              onChange={() => setThroatPain(!throatPain)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Ear Ache</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"earAche\" name=\"earAche\"\n              checked={earAche}\n              onChange={() => setEarAche(!earAche)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Ear Discharge</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"earDischarge\" name=\"earDischarge\"\n              checked={earDischarge}\n              onChange={() => setEarDischarge(!earDischarge)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Cough</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"cough\" name=\"cough\"\n              checked={cough}\n              onChange={() => setCough(!cough)}\n            /></td>\n          </tr>\n\n          <tr>\n            <td>Cough Type</td>\n            <td>\n              <tr>\n              <input className='form-check-input form-check-input-lg' type=\"radio\" id=\"dryCough\" name=\"coughType\" value=\"dry\"\n                checked={dryCough}\n                onChange={() => setDryCough(!dryCough)}\n              />\n              <label htmlFor=\"dryCough\">Dry Cough</label>\n              </tr>\n              <tr>\n              <input className='form-check-input form-check-input-lg' type=\"radio\" id=\"wetCough\" name=\"coughType\" value=\"wet\"\n                checked={wetCough}\n                onChange={() => setWetCough(!wetCough)}\n              />\n              <label htmlFor=\"wetCough\">Wet Cough</label>\n              </tr>\n            </td>\n          </tr>\n\n          <tr>\n            <td>Breathlessness</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"breathlessness\" name=\"breathlessness\"\n              checked={breathlessness}\n              onChange={() => setBreathlessness(!breathlessness)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Appetite</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"appetite\" name=\"appetite\"\n              checked={appetite}\n              onChange={() => setAppetite(!appetite)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Abdomen Pain</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"abdomenPain\" name=\"abdomenPain\"\n              checked={abdomenPain}\n              onChange={() => setAbdomenPain(!abdomenPain)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Loose Motions</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" id=\"looseMotions\" name=\"looseMotions\"\n              checked={looseMotions}\n              onChange={() => setLooseMotions(!looseMotions)}\n            /></td>\n          </tr>\n          <tr>\n            <td>Urine Color</td>\n            <td><input className=\"form-control-lg\" type=\"text\" id=\"urineColor\" name=\"urineColor\"\n              checked={urineColor}\n              onChange={(e) => setUrineColor(e.target.urineColor)}\n            /></td>\n          </tr>\n          <tr>\n            <td>other</td>\n            <td><input className=\"form-control-lg\" type=\"text\" id=\"other\" name=\"other\"\n              checked={other}\n              onChange={(e) => setOther(e.target.value)}\n            /></td>\n          </tr>\n        </tbody>\n      </table>\n      <button className='mt-3 mb-5 btn btn-success' type=\"submit\">Submit</button>\n      </form>\n    </div>\n    );\n}\n\nexport default CreateAppointment;","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Home.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/ProfilePage.js",["162"],"import React, { useState, useEffect, useContext } from 'react';\nimport Navbar from './Navbar';\nimport Profile from './Profile';\nimport Appointments from './Appointments';\nimport MedicalHistory from './MedicalHistory';\nimport VaccinationHistory from './VaccinationHistory';\nimport TestList from './TestList';\nimport Login from './Login';\nimport AllMedicines from './AllMedicines';\nimport { UserContext } from './context/UserContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './profilePage.css';\nimport UrlContext from './context/UrlContext';\nimport StaffProfile from './StaffProfile';\nimport StudentProfile from './StudentProfile';\nimport DoctorProfile from './DoctorProfile';\nimport loadUserData from './local-data/UserGet';\nimport setPage from './local-data/CurrentPageSet';\nimport getPage from './local-data/CurrentPageGet';\nimport saveUserData from './local-data/UserSet';\nimport CreateAppointment from './CreateAppointment';\n\nconst ProfilePage = () => {\n  const [currentPage, setCurrentPage] = useState(getPage());\n  const [profileData, setProfileData] = useState(null);\n  const url = useContext(UrlContext);\n  const user_uri = url + 'api/user/get/?id=';\n  let {user_id} = useContext(UserContext);\n\n  useEffect(() => {\n    const user = loadUserData();\n    user_id = user.id;\n    fetchProfileData();\n  },[]);\n\n  const fetchProfileData = async () => {\n    try {\n      const response = await fetch(`${user_uri}${user_id}`);\n      const jsonData = await response.json();\n      setProfileData(jsonData);\n    } catch (error) {\n      console.error('Error fetching profile data:', error);\n    }\n  };\n\n  const handlePageChange = (page) => {\n    setPage(page);\n    const curr_page = getPage();\n    console.log(curr_page);\n    setCurrentPage(curr_page);\n  };\n\n  const renderPageContent = () => {\n    if (currentPage === 'profile') {\n      if (profileData) {\n        let user = loadUserData();\n        user.patient_or_doc = profileData.patient_or_doc;\n        saveUserData(user);\n        if (profileData.patient_or_doc & profileData.staff_or_student) {\n          return (\n            <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n              <StaffProfile profileData={profileData} />\n            </div>);\n        } else if (profileData.patient_or_doc) {\n          return (\n            <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n              <StudentProfile profileData={profileData} />\n            </div>);\n        } else {\n          return (\n            <div  className='w-50 mx-auto' style={{ position: 'relative' }}>\n              <DoctorProfile profileData={profileData} />\n              </div>);\n        }\n      } else {\n        return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <Profile profileData={profileData} />\n          </div>);\n      }\n\n    } else {\n      switch (currentPage) {\n        case 'newAppointment':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <CreateAppointment />\n          </div>);\n        case 'appointments':\n          return (\n            <div className='w-75 mx-auto' style={{ position: 'relative' }}>\n              <Appointments />\n            </div>\n          );\n        case 'medicalHistory':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <MedicalHistory />\n          </div>);\n        case 'vaccinationHistory':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <VaccinationHistory />\n          </div>);\n        case 'testList':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <TestList />\n          </div>);\n        case 'logout':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <Login />\n          </div>);\n        case 'all-medicine':\n          return (\n          <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <AllMedicines />\n          </div>);\n        default:\n          return (\n          <div  className='w-50 mx-auto' style={{ position: 'relative' }}>\n            <Profile />\n          </div>);\n      }\n    }\n  };\n  \n\n  return (\n    <div style={{width:'100%',top:'0',left:'0', position:'absolute', overflow:'hidden'}}>\n      <div style={{width:'100%',top:'0',left:'0', position:'relative'}}>\n        <Navbar onPageChange={handlePageChange} userType={profileData && profileData.patient_or_doc} />\n      </div>\n      <div className='w-100 mx-auto' style={{position:'relative',}}>\n        {renderPageContent()}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/CreateTest.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/EditMedicalHistory.js",["163"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport UrlContext from \"./context/UrlContext\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst EditMedicalHistory = () => {\n  const { state } = useLocation();\n  const url = useContext(UrlContext);\n  const url_uri = url + 'api/patient/update/medical-history/';\n  const [formValues, setFormValues] = useState({\n    med_hist_id : state.id,\n    hypertension_self: state.hypertension_self,\n    hypertension_father: state.hypertension_father,\n    hypertension_mother: state.hypertension_mother,\n    diabetes_self: state.diabetes_self,\n    diabetes_father: state.diabetes_father,\n    diabetes_mother: state.diabetes_mother,\n    prev_operation_injury: state.prev_operation_injury,\n    chronic_disease: state.chronic_disease,\n    allergic_medicine: state.allergic_medicine,\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(state);\n  }, []);\n\n  const handleBooleanChange = (e) => {\n    const { name } = e.target;\n    const value = e.target.checked;\n    setFormValues((prevValues) => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n  const handleTextChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues((prevValues) => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('med_hist_id', formValues.med_hist_id);\n    formData.append('hypertension_self', formValues.hypertension_self);\n    formData.append('hypertension_father', formValues.hypertension_father);\n    formData.append('hypertension_mother', formValues.hypertension_mother);\n    formData.append('diabetes_self', formValues.diabetes_self);\n    formData.append('diabetes_father', formValues.diabetes_father);\n    formData.append('diabetes_mother', formValues.diabetes_mother);\n    formData.append('prev_operation_injury', formValues.prev_operation_injury);\n    formData.append('chronic_disease', formValues.chronic_disease);\n    formData.append('allergic_medicine', formValues.allergic_medicine);\n    console.log(formValues);\n    try {\n      const response = await fetch(`${url_uri}`, {\n        method: 'PUT',\n        body: formData,\n      });\n  \n      if (response.ok) {\n        console.log('Medical data updated successfully');\n      } else {\n        console.error('Error updating medical data:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating medical data:', error);\n    }\n    navigate(`/profile`);\n  };\n  \n\n  return (\n    <div style={{width:'100%',top:'0',left:'0', position:'absolute', overflow:'hidden'}}>\n      <form className='w-50 mx-auto' style={{position:'relative'}} onSubmit={handleSubmit} >\n      <h2 className=\"mt-3 text-center\">Editing Medical History</h2>\n      <table className='table table-sm'>\n        <tbody>\n          <h5>Self</h5>\n          <tr>\n            <td>Hypertension (Self)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"hypertension_self\" value=\"true\" checked={formValues.hypertension_self} onChange={handleBooleanChange} /></td>\n          </tr>\n          <tr>\n            <td>Diabetes (Self)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"diabetes_self\" value=\"true\" checked={formValues.diabetes_self} onChange={handleBooleanChange} /></td>\n          </tr>\n          <tr>\n            <td>Allergic Medicine</td>\n            <td><input className=\"form-control\" type=\"text\" name=\"allergic_medicine\" value={formValues.allergic_medicine} onChange={handleTextChange}/></td>\n          </tr>\n          <tr>\n            <td>Chronic Disease</td>\n            <td><input className=\"form-control\" type=\"text\" name=\"chronic_disease\" value={formValues.chronic_disease} onChange={handleTextChange}/></td>\n          </tr>\n          <tr>\n            <td>Previous Operation Injury</td>\n            <td><input className=\"form-control\" type=\"text\" name=\"prev_operation_injury\" value={formValues.prev_operation_injury} onChange={handleTextChange}/></td>\n          </tr>\n          <br />\n          <h5>Father</h5>\n          <tr>\n            <td>Hypertension (Father)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"hypertension_father\" value=\"true\" checked={formValues.hypertension_father} onChange={handleBooleanChange} /></td>\n          </tr>\n          <tr>\n            <td>Diabetes (Father)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"diabetes_father\" value=\"true\" checked={formValues.diabetes_father} onChange={handleBooleanChange} /></td>\n          </tr>\n          <br />\n          <h5>Mother</h5>\n          <tr>\n            <td>Hypertension (Mother)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"hypertension_mother\" value=\"true\" checked={formValues.hypertension_mother} onChange={handleBooleanChange} /></td>\n          </tr>\n          <tr>\n            <td>Diabetes (Mother)</td>\n            <td><input className='form-check-input form-check-input-lg' type=\"checkbox\" name=\"diabetes_mother\" value=\"true\" checked={formValues.diabetes_mother} onChange={handleBooleanChange} /></td>\n          </tr>\n        </tbody>\n      </table>\n      <button className='mt-3 mb-5 w-25 mx-auto btn btn-danger' type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditMedicalHistory;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Signup.js",["164"],"import React, { useContext, useState } from 'react';\nimport UrlContext from './context/UrlContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignupPage = () => {\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState(null);\n  const [lastName, setLastName] = useState('');\n  const [mobilePersonal, setMobilePersonal] = useState('');\n  const [state, setState] = useState('');\n  const [district, setDistrict] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [addressLine, setAddressLine] = useState(null);\n  const [mobileEmergency, setMobileEmergency] = useState('');\n  const [dob, setDob] = useState('');\n  const [sex, setSex] = useState('');\n  const [bloodGroup, setBloodGroup] = useState('');\n  const [staffOrStudent, setStaffOrStudent] = useState(false);\n\n  const [course, setCourse] = useState('');\n  const [admissionNum, setAdmissionNum] = useState('');\n  const [hostelNumAndName, setHostelNumAndName] = useState('');\n  const [roomNum, setRoomNum] = useState('-1');\n  const [fatherOccupation, setFatherOccupation] = useState('');\n  const [motherOccupation, setMotherOccupation] = useState('');\n  const [fatherMobile, setFatherMobile] = useState('');\n  const [motherMobile, setMotherMobile] = useState('');\n\n  const [staffOrRelative, setStaffOrRelative] = useState(true);\n  const [employeeCode, setEmployeeCode] = useState('');\n\n  const url = useContext(UrlContext);\n  const med_hist_uri = url + 'api/patient/create/medical-history/';\n  const staff_uri = url + 'api/patient/create/staff/';\n  const student_uri = url + 'api/patient/create/student/';\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Medical History Data object\n    const medHistData = new FormData();\n    medHistData.append('hypertension_self', 'false');\n    medHistData.append('hypertension_self', 'false');\n    medHistData.append('hypertension_father', 'false');\n    medHistData.append('hypertension_mother', 'false');\n    medHistData.append('diabetes_self', 'false');\n    medHistData.append('diabetes_father', 'false');\n    medHistData.append('diabetes_mother', 'false');\n    medHistData.append('prev_operation_injury', 'nil');\n    medHistData.append('chronic_disease', 'nil');\n    medHistData.append('allergic_medicine', 'nil');\n\n    // Prepare the data object\n    const formData = new FormData();\n    formData.append('first_name', firstName);\n    formData.append('middle_name', middleName);\n    formData.append('last_name', lastName);\n    formData.append('mobile_personal', mobilePersonal);\n    formData.append('patient_or_doc', true);\n    formData.append('state', state);\n    formData.append('district', district);\n    formData.append('pincode', pincode);\n    formData.append('address_line', addressLine);\n    formData.append('mobile_emergency', mobileEmergency);\n    formData.append('dob', dob);\n    formData.append('sex', sex);\n    formData.append('blood_group', bloodGroup);\n    formData.append('staff_or_student', staffOrStudent);\n\n    if (staffOrStudent) {\n      formData.append('staff_or_relative', staffOrRelative);\n      formData.append('employee_code', employeeCode);\n    } else {\n      formData.append('course', course);\n      formData.append('admission_num', admissionNum);\n      formData.append('hostel_num_and_name', hostelNumAndName);\n      formData.append('room_num', roomNum);\n      formData.append('father_occupation', fatherOccupation);\n      formData.append('mother_occupation', motherOccupation);\n      formData.append('father_mobile', fatherMobile);\n      formData.append('mother_mobile', motherMobile);\n    }\n\n    // You can send the userData to the backend for further processing\n    console.log(formData);\n\n    // Send the data to the server\n    try {\n      const response = await fetch(staffOrStudent ? `${staff_uri}` : `${student_uri}`, {\n        method: 'POST',\n        body: formData,\n      })\n      .then()\n      .catch(Error);\n      \n      if (response.ok) {\n        const jsonData = await response.json();\n        console.log(jsonData);\n        console.log('This is the response --------------------------');\n        medHistData.append('patient_id', jsonData.id);\n        console.log(medHistData);\n        const user_response = await fetch(`${med_hist_uri}`, {\n          method:'POST',\n          body: medHistData,\n        })\n        .then()\n        .catch(Error);\n      } else {\n        // Handle error\n      }\n    } catch (error) {\n      console.error('Error creating patient:', error);\n    }\n    navigate(`/login`);\n\n    // Reset the form fields\n    setFirstName('');\n    setMiddleName(null);\n    setLastName('');\n    setMobilePersonal('');\n    setState('');\n    setDistrict('');\n    setPincode('');\n    setAddressLine(null);\n    setMobileEmergency('');\n    setDob('');\n    setSex('');\n    setBloodGroup('');\n    setStaffOrStudent(false);\n    setCourse('');\n    setAdmissionNum('');\n    setHostelNumAndName('');\n    setRoomNum('-1');\n    setFatherOccupation('');\n    setMotherOccupation('');\n    setFatherMobile('');\n    setMotherMobile('');\n    setStaffOrRelative(true);\n    setEmployeeCode('');\n  };\n\n  const stateOptions = [\n    'Andaman and Nicobar Islands',\n    'Andhra Pradesh',\n    'Arunachal Pradesh',\n    'Assam',\n    'Bihar',\n    'Chandigarh',\n    'Chhattisgarh',\n    'Dadra and Nagar Haveli',\n    'Daman and Diu',\n    'Delhi',\n    'Goa',\n    'Gujarat',\n    'Haryana',\n    'Himachal Pradesh',\n    'Jammu and Kashmir',\n    'Jharkhand',\n    'Karnataka',\n    'Kerala',\n    'Lakshadweep',\n    'Madhya Pradesh',\n    'Maharashtra',\n    'Manipur',\n    'Meghalaya',\n    'Mizoram',\n    'Nagaland',\n    'Odisha',\n    'Puducherry',\n    'Punjab',\n    'Rajasthan',\n    'Sikkim',\n    'Tamil Nadu',\n    'Telangana',\n    'Tripura',\n    'Uttar Pradesh',\n    'Uttarakhand',\n    'West Bengal'\n  ];\n\n  return (\n    <div style={{ width: '100%', top: '0', left: '0', position: 'absolute', overflow: 'hidden' }}>\n      <div className='w-50 mx-auto' style={{ position: 'relative' }}>\n        <h2 className='mx-auto my-3' style={{ position: 'relative', textAlign:'center' }}>SIGNUP</h2>\n        <form onSubmit={handleSubmit}>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"first_name\"\n              name=\"first_name\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              placeholder='First Name'\n              required\n            />\n            <label htmlFor=\"first_name\">First Name</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"middle_name\"\n              name=\"middle_name\"\n              value={middleName}\n              onChange={(e) => setMiddleName(e.target.value)}\n              placeholder='Middle Name'\n            />\n            <label htmlFor=\"middle_name\">Middle Name</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"last_name\"\n              name=\"last_name\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              placeholder='Last Name'\n              required\n            />\n            <label htmlFor=\"last_name\">Last Name</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"mobile_personal\"\n              name=\"mobile_personal\"\n              value={mobilePersonal}\n              onChange={(e) => setMobilePersonal(e.target.value)}\n              placeholder='Personal Mobile'\n              required\n            />\n            <label htmlFor=\"mobile_personal\">Personal Mobile</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"mobile_emergency\"\n              name=\"mobile_emergency\"\n              value={mobileEmergency}\n              onChange={(e) => setMobileEmergency(e.target.value)}\n              placeholder='Emergency Mobile'\n              required\n            />\n            <label htmlFor=\"mobile_emergency\">Emergency Mobile</label>\n          </div>\n          <div className='form-floating mb-3'>\n            <select\n              className='form-control'\n              id=\"state\"\n              name=\"state\"\n              value={state}\n              onChange={(e) => setState(e.target.value)}\n              required\n            >\n              <option value=\"\">Select State</option>\n              {stateOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n            <label htmlFor=\"state\">State</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"district\"\n              name=\"district\"\n              value={district}\n              onChange={(e) => setDistrict(e.target.value)}\n              placeholder='District'\n              required\n            />\n            <label htmlFor=\"district\">District</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"pincode\"\n              name=\"pincode\"\n              value={pincode}\n              onChange={(e) => setPincode(e.target.value)}\n              placeholder='Pincode'\n              required\n            />\n            <label htmlFor=\"pincode\">Pincode</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"address_line\"\n              name=\"address_line\"\n              value={addressLine}\n              onChange={(e) => setAddressLine(e.target.value)}\n              placeholder='Address Line'\n            />\n            <label htmlFor=\"address_line\">Address Line</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"date\"\n              id=\"dob\"\n              name=\"dob\"\n              value={dob}\n              onChange={(e) => setDob(e.target.value)}\n              placeholder='Date of Birth'\n              required\n            />\n            <label htmlFor=\"dob\">Date of Birth</label>\n          </div>\n          <div className='form-floating my-3'>\n            <select\n              className='form-control'\n              id=\"sex\"\n              name=\"sex\"\n              value={sex}\n              onChange={(e) => setSex(e.target.value)}\n              required\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Male\">Male</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Other\">Other</option>\n            </select>\n            <label htmlFor=\"sex\">Sex</label>\n          </div>\n          <div className='form-floating my-0'>\n            <input\n              className='form-control'\n              type=\"text\"\n              id=\"blood_group\"\n              name=\"blood_group\"\n              value={bloodGroup}\n              onChange={(e) => setBloodGroup(e.target.value)}\n              placeholder='Blood Group'\n            />\n            <label htmlFor=\"blood_group\">Blood Group</label>\n          </div>\n          <div className='my-3' style={{position:'relative', display:'flex', justifyContent:\"space-evenly\"}}>\n            <div>\n              <input\n                className='form-check-input form-check-input-lg'\n                type=\"radio\"\n                id=\"staff\"\n                name=\"staff_or_student\"\n                value=\"true\"\n                checked={staffOrStudent === true}\n                onChange={(e) => setStaffOrStudent(true)}\n                required\n              ></input>\n              <label htmlFor=\"staff\">Staff/Relative</label>\n            </div>\n            <div>\n              <input\n                className='form-check-input form-check-input-lg'\n                type=\"radio\"\n                id=\"student\"\n                name=\"staff_or_student\"\n                value=\"false\"\n                checked={staffOrStudent === false}\n                onChange={(e) => setStaffOrStudent(false)}\n                required\n              />\n              <label htmlFor=\"student\">Student</label>\n            </div>\n          </div>\n          {/* Additional fields for students */}\n          {!staffOrStudent && (\n            <>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"course\"\n                  name=\"course\"\n                  value={course}\n                  onChange={(e) => setCourse(e.target.value)}\n                  placeholder='Course'\n                  required\n                />\n                <label htmlFor=\"course\">Course</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"admission_num\"\n                  name=\"admission_num\"\n                  value={admissionNum}\n                  onChange={(e) => setAdmissionNum(e.target.value)}\n                  placeholder='Admission Number'\n                  required\n                />\n                <label htmlFor=\"admission_num\">Admission Number</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"hostel_num_and_name\"\n                  name=\"hostel_num_and_name\"\n                  value={hostelNumAndName}\n                  onChange={(e) => setHostelNumAndName(e.target.value)}\n                  placeholder='Hostel Number and Name'\n                  required\n                />\n                <label htmlFor=\"hostel_num_and_name\">Hostel Number and Name</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"room_num\"\n                  name=\"room_num\"\n                  value={roomNum}\n                  onChange={(e) => setRoomNum(e.target.value)}\n                  placeholder='Room Number'\n                  required\n                />\n                <label htmlFor=\"room_num\">Room Number</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"father_occupation\"\n                  name=\"father_occupation\"\n                  value={fatherOccupation}\n                  onChange={(e) => setFatherOccupation(e.target.value)}\n                  placeholder='Father Occupation'\n                  required\n                />\n                <label htmlFor=\"father_occupation\">Father Occupation</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"mother_occupation\"\n                  name=\"mother_occupation\"\n                  value={motherOccupation}\n                  onChange={(e) => setMotherOccupation(e.target.value)}\n                  placeholder='Mother Occupation'\n                  required\n                />\n                <label htmlFor=\"mother_occupation\">Mother Occupation</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"father_mobile\"\n                  name=\"father_mobile\"\n                  value={fatherMobile}\n                  onChange={(e) => setFatherMobile(e.target.value)}\n                  placeholder='Father Mobile'\n                  required\n                />\n                <label htmlFor=\"father_mobile\">Father Mobile</label>\n              </div>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"mother_mobile\"\n                  name=\"mother_mobile\"\n                  value={motherMobile}\n                  onChange={(e) => setMotherMobile(e.target.value)}\n                  placeholder='Mother Mobile'\n                  required\n                />\n                <label htmlFor=\"mother_mobile\">Mother Mobile</label>\n              </div>\n            </>\n          )}\n          \n          {/* Additional fields for staff */}\n          {staffOrStudent && (\n            <>\n              <div className='form-floating my-0'>\n                <input\n                  className='form-control'\n                  type=\"text\"\n                  id=\"employee_code\"\n                  name=\"employee_code\"\n                  value={employeeCode}\n                  onChange={(e) => setEmployeeCode(e.target.value)}\n                  placeholder='Employee Code'\n                  required\n                />\n                <label htmlFor=\"employee_code\">Employee Code</label>\n              </div>\n              <div className='my-3' style={{position:'relative', display:'flex', justifyContent:\"space-evenly\"}}>\n                <div>\n                  <input\n                    className='form-check-input form-check-input-lg'\n                    type=\"radio\"\n                    id=\"staff2\"\n                    name=\"staff_or_relative\"\n                    value=\"true\"\n                    checked={staffOrRelative === true}\n                    onChange={(e) => setStaffOrRelative(true)}\n                    required\n                  ></input>\n                  <label htmlFor=\"staff2\">Staff</label>\n                </div>\n                <div>\n                  <input\n                    className='form-check-input form-check-input-lg'\n                    type=\"radio\"\n                    id=\"relative\"\n                    name=\"staff_or_relative\"\n                    value=\"false\"\n                    checked={staffOrRelative === false}\n                    onChange={(e) => setStaffOrRelative(false)}\n                    required\n                  />\n                  <label htmlFor=\"relative\">Relative</label>\n                </div>\n              </div>\n            </>\n          )}\n          <button className='btn btn-success my-5' type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignupPage;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/context/UrlContext.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/context/UserContext.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/MedicalHistory.js",["165"],"//MedicalHistory\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UrlContext from './context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from './local-data/UserGet';\n\nfunction MedicalHistory () {\n  const navigate = useNavigate();\n  const [medicalData, setMedicalData] = useState([]);\n  const url = useContext(UrlContext);\n  const user = loadUserData();\n  const user_uri = url + 'api/patient/get/medical-history/?patient_id=';\n\n  useEffect(() => {\n    fetchMedicalHistory();\n  }, []);\n\n  const fetchMedicalHistory = async () => {\n    try {\n      const response = await fetch(`${user_uri}${user.id}`);\n      if(response.ok){\n        const jsonData = await response.json();\n        setMedicalData(jsonData);\n      }else{\n        console.error('Error fetching medical history:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching medical history:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className='mt-3 text-center'>Medical History</h2>\n      <div>\n      <table className='table table-sm'>\n        <tbody>\n          <h5>Self</h5> \n          <tr>\n            <td>Hypertension (Self)</td>\n            <td>{medicalData.hypertension_self ? 'Yes' : 'No'}</td>\n          </tr>\n          <tr>\n            <td>Diabetes (Self)</td>\n            <td>{medicalData.diabetes_self ? 'Yes' : 'No'}</td>\n          </tr>\n          <tr>\n            <td>Allergic Medicine</td>\n            <td>{medicalData.allergic_medicine}</td>\n          </tr>\n          <tr>\n            <td>Chronic Disease</td>\n            <td>{medicalData.chronic_disease}</td>\n          </tr>\n          <tr>\n            <td>Previous Operation Injury</td>\n            <td>{medicalData.prev_operation_injury}</td>\n          </tr>\n          <br />\n          <h5>Father</h5>\n          <tr>\n            <td>Hypertension (Father)</td>\n            <td>{medicalData.hypertension_father ? 'Yes' : 'No'}</td>\n          </tr>\n          <tr>\n            <td>Diabetes (Father)</td>\n            <td>{medicalData.diabetes_father ? 'Yes' : 'No'}</td>\n          </tr>\n          <br />\n          <h5>Mother</h5>\n          <tr>\n            <td>Hypertension (Mother)</td>\n            <td>{medicalData.hypertension_mother ? 'Yes' : 'No'}</td>\n          </tr>\n          <tr>\n            <td>Diabetes (Mother)</td>\n            <td>{medicalData.diabetes_mother ? 'Yes' : 'No'}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div className='text-center'>\n        <button className='mt-3 w-25 mx-auto btn btn-danger' style={{position:'relative'}} onClick={() =>\n          navigate(\"/edit-medical-history\", {state: medicalData})\n        }>Edit</button>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MedicalHistory;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Profile.js",["166"],"import React from 'react';\n\nfunction Profile({profileData}) {\n  const formatDateAndTime = (dateTimeString) => {\n    const dateObj = new Date(dateTimeString);\n    const formattedDate = dateObj.toLocaleDateString();\n    const formattedTime = dateObj.toLocaleTimeString();\n    return { formattedDate, formattedTime };\n  };\n\n  return (\n    <div>\n      {profileData ? (\n        <div className='profile-sidebar'>\n          <div className=\"header\">\n          <h2>{profileData.first_name} {profileData.last_name}</h2>\n          <p> ({profileData.staff_or_student ? 'Staff' : profileData.patient_or_doc ? 'Student' : 'Doctor' })</p>\n          </div>\n          <div className=\"profile-sidebar-content\">\n          <p> <span>Mobile</span><span>:</span> <span>{profileData.mobile_personal}</span></p>\n          {profileData.patient_or_doc && (\n            <div>\n              <p>Age: {profileData.age}</p>\n              <p>Sex: {profileData.sex}</p>\n              <p>Blood Group: {profileData.blood_group}</p>\n              {profileData.staff_or_student ? (\n                <div>\n                <p>Employee Code: {profileData.employee_code}</p>\n              </div>\n              ) : (\n                <div>\n                  <p>Course: {profileData.course}</p>\n                  <p>Admission Number: {profileData.admission_num}</p>\n                  <p>Hostel Number and Name: {profileData.hostel_num_and_name}</p>\n                  <p>Room Number: {profileData.room_num}</p>\n                  <p>Father's Occupation: {profileData.father_occupation}</p>\n                  <p>Mother's Occupation: {profileData.mother_occupation}</p>\n                  <p>Father's Mobile: {profileData.father_mobile}</p>\n                  <p>Mother's Mobile: {profileData.mother_mobile}</p>\n                </div>\n              )}\n            </div>\n          )}\n          {profileData.staff_or_relative && (\n            <div>\n              <p>Staff or Relative: Staff</p>\n              <p>Employee Code: {profileData.employee_code}</p>\n            </div>\n          )}\n          {profileData.degree && (\n            <div>\n              <p>{profileData.degree}</p>\n              <p><i>{profileData.specialization}</i></p>\n            </div>\n          )}\n          <p>Address: {profileData.address_line} {profileData.district} {profileData.state}, {profileData.pincode}</p>\n          <p>\n            <div>\n              <p>{profileData.address_line}</p>\n              <p>{profileData.district} - {profileData.pincode}</p>\n              <p>{profileData.state}</p>\n            </div>\n          </p>\n          </div>\n          </div>\n      ) : (\n        <p>Loading profile data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default Profile;","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/AllMedicines.js",["167"],"import React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\n\nconst AllMedicines = () => {\n  const [medicineList, setMedicineList] = useState([]);\n  const url = useContext(UrlContext)\n  const user_uri = url + 'api/master/get/all-medicines/';\n\n  useEffect(() => {\n    fetchMedicineList();\n  }, []);\n\n  const fetchMedicineList = async () => {\n    try {\n      const response = await fetch(`${user_uri}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const data = jsonData[0];\n        const key = Object.keys(data)[0]\n        setMedicineList(data[key]);\n      } else {\n        console.error('Error fetching medicine list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching medicine list:', error);\n    }\n  };\n\n  return (\n    <div className='mt-3' style={{alignContent:'center'}}>\n      <h2 style={{textAlign:'center'}}>MEDICINE CATALOG</h2>\n      <table className='table table-sm'>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Count</th>\n            <th>Date of Mfg</th>\n            <th>Date of Exp</th>\n            <th>Company</th>\n          </tr>\n        </thead>\n        <tbody>\n          {medicineList.map((medicine) => (\n            <tr key={medicine.id}>\n              <td>{medicine.name}</td>\n              <td>{medicine.type}</td>\n              <td>{medicine.count}</td>\n              <td>{medicine.date_of_mfg}</td>\n              <td>{medicine.date_of_expiry}</td>\n              <td>{medicine.company}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AllMedicines;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/VaccinationHistory.js",["168","169","170"],"import React, { useState, useEffect, useContext } from 'react';\nimport UrlContext from './context/UrlContext';\nimport { Button, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from './local-data/UserGet';\n\nconst VaccinationHistory = () => {\n  const [vaccinationHistoryEntries, setVaccinationHistoryEntries] = useState([]);\n  const [vaccineName, setVaccineName] = useState('');\n  const [allVaccines, setAllVaccines] = useState([]);\n  const [date, setDate] = useState('');\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const user_uri = url + 'api/patient/get/vaccines/?patient_id=';\n  const user_uri_create = url + 'api/patient/create/vaccine/';\n  const user_uri_master = url + 'api/master/get/all-vaccines/';\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //fetching vaccination history for patient\n  useEffect(() => {\n    fetchVaccinationHistory();\n  }, []);\n\n  const fetchVaccinationHistory = async () => {\n    try {\n      const response = await fetch(`${user_uri}${user.id}`);\n      const jsonData = await response.json();\n      const key = Object.keys(jsonData)[0];\n      setVaccinationHistoryEntries(jsonData[key]);\n    } catch (error) {\n      console.error('Error fetching vaccination history:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('patient_id', user.id);\n    formData.append('vaccine_master_id', vaccineName);\n    formData.append('date', date);\n    // Send the data to the server\n    try {\n      const response = await fetch(`${user_uri_create}`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log('Vaccine created successfully');\n        fetchVaccinationHistory();\n      } else {\n        console.log('Failed to create vaccine');\n      }\n    } catch (error) {\n      console.error('Error creating vaccine:', error);\n    }\n    handleClose();\n  };\n\n  //access master of vaccines\n  useEffect(() => {\n    fetchVaccineMaster();\n  }, []);\n  const fetchVaccineMaster = async () => {\n    try {\n      const response = await fetch(`${user_uri_master}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        setAllVaccines(jsonData);\n        console.log(allVaccines);\n      } else {\n        console.error('Error fetching vaccines master list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching vaccines master list:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className='mt-3 text-center'>Vaccination History</h2>\n      <table className='table table-sm'>\n        <thead>\n          <tr>\n            <th>Vaccine</th>\n            <th>Date</th>\n            <th>Details</th>\n          </tr>\n        </thead>\n        <tbody>\n          {vaccinationHistoryEntries.map((entry) => (\n            <tr key={entry.id}>\n              <td>{entry.name}</td>\n              <td>{entry.date}</td>\n              <td>{entry.details}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <button onClick={handleShow} className='mt-3 w-100 mx-auto btn btn-success' style={{position:'relative',}}>Add Vaccine</button>\n\n      <Modal size=\"sm\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title><strong>Create Vaccine</strong></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"vaccineName\">Vaccine</label>\n              <select\n                id=\"vaccineName\"\n                value={vaccineName}\n                onChange={(e) => setVaccineName(e.target.value)}\n              >\n                <option value=\"\">Select a vaccine</option>\n                {allVaccines.map((vaccine) => (\n                  <option key={vaccine.id} value={vaccine.id}>\n                    {vaccine.name}\n                  </option>\n                ))}\n              </select>\n\n              <label className='mt-3' htmlFor=\"date\">Date:</label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n              />\n\n              <button className='mt-4 btn btn-success' type=\"submit\">Submit</button>\n            </form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default VaccinationHistory;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/DoctorProfile.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Navbar.js",["171","172"],"import React from 'react';\nimport './navbar.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport deleteLocalData from './local-data/ClearLocalData';\n\nconst Navbar = ({ onPageChange, userType }) => {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    deleteLocalData();\n    navigate(`/`);\n  }\n\n  return (\n    <nav className='bg-success'>\n      <div className='container-fluid' style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\n\n        <div style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\n          <a href='#'>\n            <img src={require('./images/logo.png').default} alt=\"logo\" style={{height:'32px'}} />\n          </a>\n            <h4 className='mx-2 my-auto text-white navbar-brand'><strong>SVNIT Dispensary</strong></h4>\n        </div>\n\n        <div style={{justifyContent:'space-between'}}>\n          <button className='btn text-white' href=\"#\" onClick={() => onPageChange('profile')}><strong>Profile</strong></button>\n          <button className='btn text-white' href=\"#\" onClick={() => onPageChange('appointments')}><strong>Appointments</strong></button>\n          {userType ? (\n            <>\n              <button className='btn text-white' href=\"#\" onClick={() => onPageChange('medicalHistory')}><strong>Medical History</strong></button>\n              <button className='btn text-white' href=\"#\" onClick={() => onPageChange('vaccinationHistory')}><strong>Vaccines</strong></button>\n              <button className='btn text-white' href=\"#\" onClick={() => onPageChange('testList')}><strong>Tests</strong></button>\n            </>  \n          ) : (\n          <button className='btn text-white' href=\"#\" onClick={() => onPageChange('all-medicine')}><strong>All Medicines</strong></button>\n          )}\n          <button className='btn text-white' onClick={handleLogout}>\n            <strong>Logout</strong>\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/StudentProfile.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointments.js",["173","174","175"],"import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './appointments.css';\nimport Appointment from './Appointment';\nimport UrlContext from './context/UrlContext';\nimport loadUserData from './local-data/UserGet';\nimport { Button, Modal } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst Appointments = () => {\n  const [appointmentsList, setAppointmentsList] = useState([]);\n  const url = useContext(UrlContext);\n  const user = loadUserData();\n  const patientAppointmentsURL = url + 'api/patient/get/appointments/?patient_id=';\n  const doctorAppointmentsURL = url + 'api/doctor/get/appointments/?doctor_id=';\n  const check_uri = url + 'api/patient/get/standing-appointment/?patient_id=';\n  const plus = <FontAwesomeIcon icon={faPlus} />;\n  const navigate = useNavigate();\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    fetchAppointmentsList();\n  }, []);\n\n  const fetchAppointmentsList = async () => {\n    try {\n      const response = await fetch(\n        user.patient_or_doc === true ? `${patientAppointmentsURL}${user.id}` : `${doctorAppointmentsURL}${user.id}`\n      );\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0];\n        setAppointmentsList(jsonData[key]);\n      } else {\n        console.error('Error fetching appointments list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching appointments list:', error);\n    }\n  };\n\n  const handleNewAppointment = async () => {\n    try {\n      const response = await fetch(`${check_uri}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        console.log(jsonData);\n        const appointment_exists = jsonData === true;\n        console.log(appointment_exists);\n\n        if (appointment_exists) {\n          handleShow();\n        } else {\n          navigate('/create-appointment');\n        }\n      } else {\n        console.error('Error checking URL:', response.status);\n      }\n    } catch (error) {\n      console.error('Error checking URL:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className='mt-3' style={{display:'flex', justifyContent:'space-between'}}>\n        <h2>Appointments</h2>\n        {user.patient_or_doc === true && (\n        <button \n          className='px-3 btn btn-success' \n          style={{position:'relative', alignItems:'center'}}\n          onClick={handleNewAppointment}\n          ><strong>{plus} New Appointment</strong>\n          </button>    \n      )}\n      </div>\n      \n      <table className='table table-sm'>\n        <thead>\n          <tr>\n            <th>Patient </th>\n            <th>Doctor </th>\n            <th>Date </th>\n            <th>Time </th>\n            <th>Status</th>\n            <th>More</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {appointmentsList.map((appointment) => (\n            <Appointment key={appointment.id} appointment={appointment} userType={user.patient_or_doc}/>\n          ))}\n        </tbody>\n      </table>\n\n      <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Body>\n          <div>\n            <p>Standing appointment</p>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Appointments;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/StaffProfile.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/TestList.js",["176","177","178","179"],"// TestList.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport UrlContext from './context/UrlContext';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport loadUserData from './local-data/UserGet';\nimport separateDateTime from './SeparateDateTime';\n\nfunction TestList() {\n  const [testList, setTestList] = useState([]);\n  const [testName , setTestName] = useState('');\n  const [appointments, setAppointments] = useState([]);\n  const [allTests, setAllTests] = useState([]);\n  const [appointmentId, setAppointmentId] = useState('');\n  const [date, setDate] = useState('');\n  const [remarks, setRemarks] = useState('');\n  const user = loadUserData();\n  const url = useContext(UrlContext);\n  const testListUrl = url + 'api/patient/get/all-tests/?patient_id=';\n  const user_uri_appointments = url + 'api/patient/get/appointments/?patient_id=';\n  const user_uri_create = url + 'api/patient/create/test/';\n  const user_uri_master = url + 'api/master/get/all-tests/';\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  //fetching test list for patient\n  useEffect(() => {\n    fetchTestList();\n  }, []);\n\n  const fetchTestList = async () => {\n    try {\n      const response = await fetch(`${testListUrl}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        const key = Object.keys(jsonData)[0]\n        setTestList(jsonData[key]);\n      } else {\n        console.error('Error fetching test list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching test list:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('appointment_id', appointmentId);\n    formData.append('test_master_id', testName);\n    formData.append('date', date);\n    formData.append('remarks', remarks);\n\n    // Send the data to the server\n    try {\n      const response = await fetch(`${user_uri_create}`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log('Test created successfully');\n        fetchTestList();\n      } else {\n        console.log('Failed to create test');\n      }\n    } catch (error) {\n      console.error('Error creating test:', error);\n    }\n    handleClose();\n  };\n\n  // access appointments\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch(`${user_uri_appointments}${user.id}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        setAppointments(jsonData['appointments']);\n        console.log(jsonData);\n      } else {\n        console.error('Error fetching appointments:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n\n  //access master of tests\n  useEffect(() => {\n    fetchTestMaster();\n  }, []);\n  const fetchTestMaster = async () => {\n    try {\n      const response = await fetch(`${user_uri_master}`);\n      if (response.ok) {\n        const jsonData = await response.json();\n        setAllTests(jsonData);\n        console.log(allTests);\n      } else {\n        console.error('Error fetching tests master list:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching tests master list:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className='mt-3 text-center'>Test List</h2>\n      <table className='table table-sm'>\n      <tbody>\n        <tr>\n          <th>Appointment</th>\n          <th>Test</th>\n          <th>Date</th>\n          <th>Remarks</th>\n          <th>Details</th>\n        </tr>\n        {testList.map((item)=>(\n          <tr key={item.id}>\n            <td>{item.appointment}</td>\n            <td>{item.name}</td>\n            <td>{item.date}</td>\n            <td>{item.remarks}</td>\n            <td>{item.details}</td>\n          </tr>\n        ))}\n      </tbody>\n      </table>\n      \n      <button onClick={handleShow} className='mt-3 w-100 mx-auto btn btn-success' style={{position:'relative',}}>Add Test</button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title><strong>Create Test</strong></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"appointment\">Appointment</label>\n              <select\n                id=\"appointment\"\n                value={appointmentId}\n                onChange={(e) => setAppointmentId(e.target.value)}>\n\n                <option value=\"\">Select an appointment</option>\n                {appointments.map((apmt) => (\n                  <option key={apmt.id} value={apmt.id}>\n                    Dr. {apmt.doctor_first_name} {apmt.doctor_last_name} \n                    {' -- '}\n                    {separateDateTime(apmt.datetime).time}\n                    {' -- '}\n                    {separateDateTime(apmt.datetime).date} \n                  </option>\n                ))}\n              </select>\n\n              <label htmlFor=\"name\">Test</label>\n              <select\n                id=\"testName\"\n                value={testName}\n                onChange={(e) => setTestName(e.target.value)}>\n\n                <option value=\"\">Select a test</option>\n                {allTests.map((test) => (\n                  <option key={test.id} value={test.id}>\n                    {test.name}\n                  </option>\n                ))}\n              </select>\n\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n              />\n\n              <label htmlFor=\"remarks\">Remarks</label>\n              <textarea\n                id=\"remarks\"\n                value={remarks}\n                onChange={(e) => setRemarks(e.target.value)}\n              ></textarea>\n\n              <button className='mt-4 btn btn-success' type=\"submit\">Submit</button>\n            </form>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default TestList;","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Address.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Age.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/Appointment.js",["180","181"],"import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport UrlContext from './context/UrlContext';\nimport { Modal } from 'react-bootstrap';\nimport AppointmentDetails from './AppointmentDetails';\nimport separateDateTime from './SeparateDateTime';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faXmark, faCheck } from '@fortawesome/free-solid-svg-icons';\n\nconst Appointment = ({ appointment , userType}) => {\n  const [status, setStatus]  = useState(appointment.status);\n  const [updatingStatus, setUpdatingStatus] = useState(true);\n  const url = useContext(UrlContext);\n  const user_uri = url + 'api/doctor/update/appointment-status/';\n  const view_icon = <FontAwesomeIcon icon={faEye} />;\n  const check = <FontAwesomeIcon icon={faCheck} />;\n  const cross = <FontAwesomeIcon icon={faXmark} />;\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const getStatus = (status) => {\n    let statusText = '';\n    let textColor = '';\n\n    if (status === -2) {\n      statusText = 'Cancelled';\n      textColor = '#c46210'; // Change text color to orange for cancelled status\n    } else if (status === -1) {\n      statusText = 'Rejected';\n      textColor = 'red'; // Change text color to red for rejected status\n    } else if (status === 0) {\n      statusText = 'Pending';\n      textColor = 'blue'; // Change text color to blue for pending status\n    } else if (status === 1) {\n      statusText = 'Confirmed';\n      textColor = 'green'; // Change text color to green for confirmed status\n    } else if (status === 2) {\n      statusText = 'Completed';\n      textColor = 'black'; // Change text color to black for completed status\n    } else {\n      statusText = 'Unknown';\n      textColor = 'gray'; // Change text color to gray for unknown status\n    }\n\n    return {\n      statusText,\n      textColor,\n    };\n  };\n\n  const handleAppointmentComplete = (status) => {\n    if (status == 1) {\n      updateAppointmentStatus(2);\n    }\n    handleClose();\n  }\n\n  const updateAppointmentStatus = async (status) => {\n    const formData = new FormData();\n    formData.append('appointment_id', appointment.id);\n    formData.append('status', status);\n    try {\n      const response = await fetch(`${user_uri}`,\n        {\n          method: 'PUT',\n          body: formData,\n        }\n      );\n  \n      if (response.ok) {\n        setStatus(status);\n        setUpdatingStatus(false);\n      } else {\n        console.error('Error updating appointment status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating appointment status:', error);\n    }\n  };\n  const { statusText, textColor } = getStatus(status);\n\n  return (\n    <tr>\n      <td>{appointment.patient_first_name} {appointment.patient_last_name}</td>\n      <td>Dr. {appointment.doctor_first_name} {appointment.doctor_last_name}</td>\n      <td>{separateDateTime(appointment.datetime).date}</td>\n      <td>{separateDateTime(appointment.datetime).time}</td>\n      <td style={{ color: textColor }}>{statusText}</td>\n      <td>\n        <button onClick={handleShow} className='px-3 py-1 mx-auto btn btn-success' style={{position:'relative'}}>{view_icon}</button>\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title><strong>Appointment Details</strong></Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <AppointmentDetails appointment_id={ appointment.id }/>\n            <div style={{display:'flex'}}>\n              <button className='px-5 py-3 mx-auto btn btn-success' onClick={()=>handleAppointmentComplete(status)}>{check}</button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n      </td>\n        <td>\n          {userType === false && appointment.status === 0 && updatingStatus && (\n            <div style={{display:'flex'}}>\n              <button \n                className='px-3 py-1 btn btn-success' \n                onClick={()=>updateAppointmentStatus(1)}\n                >{check}\n              </button>\n              <button \n                className='px-3 py-1 mx-1 btn btn-danger' \n                onClick={()=>updateAppointmentStatus(-1)}\n                >{cross}\n              </button>\n            </div>\n          )}\n          {userType === true && (appointment.status === 0 || appointment.status === 1) && updatingStatus && (\n            <div style={{display:'flex'}}>\n              <button \n                className='px-3 py-1 btn btn-warning' \n                onClick={()=>updateAppointmentStatus(-2)}\n                style={{color:'white'}}\n                >{cross}\n              </button>\n            </div>\n          )}\n      </td>\n    </tr>\n  );\n};\n\nexport default Appointment;\n","/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/CurrentPageSet.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/UserSet.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/UserGet.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/CurrentPageGet.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/Get.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/Save.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/SeparateDateTime.js",[],"/Users/nehaljhajharia/Desktop/Chikitsa/chikitsa_frontend/src/local-data/ClearLocalData.js",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":11,"column":24,"nodeType":"188","messageId":"189","endLine":11,"endColumn":39},{"ruleId":"186","severity":1,"message":"190","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":33},{"ruleId":"186","severity":1,"message":"191","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"186","severity":1,"message":"192","line":5,"column":17,"nodeType":"188","messageId":"189","endLine":5,"endColumn":24},{"ruleId":"186","severity":1,"message":"193","line":11,"column":9,"nodeType":"188","messageId":"189","endLine":11,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":15,"column":6,"nodeType":"196","endLine":15,"endColumn":8,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":46,"column":6,"nodeType":"196","endLine":46,"endColumn":8,"suggestions":"199"},{"ruleId":"194","severity":1,"message":"200","line":32,"column":15,"nodeType":"201","endLine":32,"endColumn":22},{"ruleId":"194","severity":1,"message":"202","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":8,"suggestions":"203"},{"ruleId":"186","severity":1,"message":"204","line":104,"column":15,"nodeType":"188","messageId":"189","endLine":104,"endColumn":28},{"ruleId":"194","severity":1,"message":"205","line":17,"column":6,"nodeType":"196","endLine":17,"endColumn":8,"suggestions":"206"},{"ruleId":"186","severity":1,"message":"207","line":4,"column":9,"nodeType":"188","messageId":"189","endLine":4,"endColumn":26},{"ruleId":"194","severity":1,"message":"208","line":11,"column":6,"nodeType":"196","endLine":11,"endColumn":8,"suggestions":"209"},{"ruleId":"186","severity":1,"message":"210","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":16},{"ruleId":"194","severity":1,"message":"211","line":25,"column":6,"nodeType":"196","endLine":25,"endColumn":8,"suggestions":"212"},{"ruleId":"194","severity":1,"message":"213","line":67,"column":6,"nodeType":"196","endLine":67,"endColumn":8,"suggestions":"214"},{"ruleId":"186","severity":1,"message":"215","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"216","severity":1,"message":"217","line":20,"column":11,"nodeType":"218","endLine":20,"endColumn":23},{"ruleId":"186","severity":1,"message":"215","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"210","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":16},{"ruleId":"194","severity":1,"message":"219","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":8,"suggestions":"220"},{"ruleId":"186","severity":1,"message":"210","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":16},{"ruleId":"194","severity":1,"message":"221","line":32,"column":6,"nodeType":"196","endLine":32,"endColumn":8,"suggestions":"222"},{"ruleId":"194","severity":1,"message":"223","line":80,"column":6,"nodeType":"196","endLine":80,"endColumn":8,"suggestions":"224"},{"ruleId":"194","severity":1,"message":"225","line":99,"column":6,"nodeType":"196","endLine":99,"endColumn":8,"suggestions":"226"},{"ruleId":"186","severity":1,"message":"215","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":54,"column":16,"nodeType":"229","messageId":"230","endLine":54,"endColumn":18},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'setShowPassword' is assigned a value but never used.","Identifier","unusedVar","'updateAppointmentStatus' is defined but never used.","'faEye' is defined but never used.","'faXmark' is defined but never used.","'check' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAppointmentDetails'. Either include it or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has a missing dependency: 'fetchDoctors'. Either include it or remove the dependency array.",["234"],"Assignments to the 'user_id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["235"],"'user_response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMedicalHistory'. Either include it or remove the dependency array.",["236"],"'formatDateAndTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchMedicineList'. Either include it or remove the dependency array.",["237"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchVaccinationHistory'. Either include it or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'fetchVaccineMaster'. Either include it or remove the dependency array.",["239"],"'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchAppointmentsList'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has a missing dependency: 'fetchTestList'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'fetchAppointments'. Either include it or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'fetchTestMaster'. Either include it or remove the dependency array.",["243"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [fetchAppointmentDetails]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchDoctors]",{"range":"268","text":"269"},"Update the dependencies array to be: [state]",{"range":"270","text":"271"},"Update the dependencies array to be: [fetchMedicalHistory]",{"range":"272","text":"273"},"Update the dependencies array to be: [fetchMedicineList]",{"range":"274","text":"275"},"Update the dependencies array to be: [fetchVaccinationHistory]",{"range":"276","text":"277"},"Update the dependencies array to be: [fetchVaccineMaster]",{"range":"278","text":"279"},"Update the dependencies array to be: [fetchAppointmentsList]",{"range":"280","text":"281"},"Update the dependencies array to be: [fetchTestList]",{"range":"282","text":"283"},"Update the dependencies array to be: [fetchAppointments]",{"range":"284","text":"285"},"Update the dependencies array to be: [fetchTestMaster]",{"range":"286","text":"287"},[683,685],"[fetchAppointmentDetails]",[2070,2072],"[fetchDoctors]",[1017,1019],"[state]",[581,583],"[fetchMedicalHistory]",[343,345],"[fetchMedicineList]",[1012,1014],"[fetchVaccinationHistory]",[2150,2152],"[fetchVaccineMaster]",[1135,1137],"[fetchAppointmentsList]",[1242,1244],"[fetchTestList]",[2489,2491],"[fetchAppointments]",[3039,3041],"[fetchTestMaster]"]